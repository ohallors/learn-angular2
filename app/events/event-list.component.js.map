{"version":3,"sources":["events/event-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBASI,4BAAoB,aAA2B;oBAA3B,kBAAa,GAAb,aAAa,CAAc;oBAR/C,cAAS,GAAW,iBAAiB,CAAC;oBACtC,eAAU,GAAW,EAAE,CAAC;oBACxB,gBAAW,GAAW,CAAC,CAAC;oBACxB,cAAS,GAAY,KAAK,CAAC;gBAO3B,CAAC;gBAED,wCAAW,GAAX;oBACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;gBACrC,CAAC;gBAED,qCAAQ,GAAR;oBAAA,iBAKC;oBAJG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,SAAS,CACpC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,EAC9B,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;gBACjD,CAAC;gBAED,4CAAe,GAAf,UAAgB,OAAe;oBAC3B,IAAI,CAAC,SAAS,GAAG,aAAa,GAAG,OAAO,CAAC;gBAC7C,CAAC;gBAhCL;oBAAC,gBAAS,CAAC;wBACP,WAAW,EAAE,sCAAsC;wBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;wBAClD,KAAK,EAAE,CAAC,mCAAe,CAAC;wBACxB,UAAU,EAAE,CAAC,iCAAc,EAAE,0BAAiB,CAAC;qBAClD,CAAC;;sCAAA;gBA4BF,yBAAC;YAAD,CA3BA,AA2BC,IAAA;YA3BD,mDA2BC,CAAA","file":"event-list.component.js","sourcesContent":["import { Component, OnInit } from 'angular2/core';\nimport { IEvent } from './event';\nimport { EventFilterPipe } from './event-filter.pipe';\nimport { ThumbComponent } from '../shared/thumbs.component';\nimport { EventService } from './event.service';\nimport { ROUTER_DIRECTIVES } from 'angular2/router';\n\n@Component({\n    templateUrl: 'app/events/event-list.component.html',\n    styleUrls: ['app/events/event-list.component.css'],\n    pipes: [EventFilterPipe],\n    directives: [ThumbComponent, ROUTER_DIRECTIVES]\n})\nexport class EventListComponent implements OnInit {\n    pageTitle: string = '+ Event list + ';\n    imageWidth: number = 50;\n    imageMargin: number = 2;\n    showImage: boolean = false;\n    searchCriteria: string;\n    events: IEvent[];\n    errorMessage: string;\n    \n    constructor(private _eventService: EventService) {\n        \n    }\n            \n    toggleImage(): void {\n        this.showImage = !this.showImage;\n    }\n    \n    ngOnInit(): void {\n        console.log('In OnInit');\n        this._eventService.getEvents().subscribe(\n            events => this.events = events,\n            error => this.errorMessage = <any>error);\n    }\n    \n    onRatingClicked(message: string): void {\n        this.pageTitle = 'Event list:' + message;\n    }\n}\n"]}